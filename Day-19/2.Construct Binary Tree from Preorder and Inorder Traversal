Problem Link:https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/

int search(vector<int> inorder,int start,int end,int curr)
    {
        for(int i=start;i<=end;i++)
        {
            if(inorder[i]==curr)
                return i;
        }
        return -1;
    }
    int idx=0;
    TreeNode* solve(vector<int> preorder, vector<int> inorder,int start,int end)
    {
        if(start>end)
            return NULL;
        int curr=preorder[idx++];
        TreeNode* n=new TreeNode(curr);
        if(start==end)
            return n;
        int pos=search(inorder,start,end,curr);
        n->left=solve(preorder,inorder,start,pos-1);
        n->right=solve(preorder,inorder,pos+1,end);
        return n;
    }
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        return solve(preorder,inorder,0,preorder.size()-1);
    }
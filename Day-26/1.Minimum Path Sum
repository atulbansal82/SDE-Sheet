Problem Link:https://leetcode.com/problems/minimum-path-sum/

int dp[201][201];
  int solve(int i,int j,vector<vector<int>>& grid)
  {
    if(i==0 && j==0)
        return grid[0][0];
    if(i<0 || j<0)
        return 1e9;
        
    if(dp[i][j]!=-1)
        return dp[i][j];
    
    int up = grid[i][j]+solve(i-1,j,grid);
    int left = grid[i][j]+solve(i,j-1,grid);
    return dp[i][j]=min(up,left);
  }
    int minPathSum(vector<vector<int>>& grid) {
        memset(dp,-1,sizeof(dp));
        int m=grid.size();
        int n=grid[0].size();
        return solve(m-1,n-1,grid);
    }